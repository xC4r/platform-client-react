{"version":3,"file":"static/js/507.b5bd0e71.chunk.js","mappings":"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","sources":["modules/almacen/Pedido.js","services/almacen/pedido-service.js","services/ventas/clientes-service.js","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Container, Card, Button, Modal, Form, Row, Col, Table, Pagination } from 'react-bootstrap';\r\nimport { getPedidos, addPedido, updatePedido, deletePedido } from \"../../services/almacen/pedido-service\";\r\nimport { getClientes } from \"../../services/ventas/clientes-service\";\r\n\r\n// Constantes para los selectores\r\nconst TIPOS_PAGO = [\r\n  { cod: '01', desc: 'Crédito' },\r\n  { cod: '02', desc: 'Contado' }\r\n];\r\n\r\nconst ESTADOS = [\r\n  { cod: '01', desc: 'Atendido' }\r\n];\r\n\r\nconst Pedido = () => {\r\n  const [pedidos, setPedidos] = useState([]);\r\n  const [clientes, setClientes] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [ordersPerPage] = useState(20);\r\n  const [form, setForm] = useState({\r\n    num_pedido: \"\",\r\n    num_cliente: \"\", // Se actualizará con el primer cliente al cargar los datos\r\n    des_cliente: \"\",\r\n    fec_pedido: new Date().toISOString().split('T')[0], // Fecha actual\r\n    cod_tipo_pago: \"01\", // \"Crédito\" por defecto\r\n    cod_estado: \"01\" // \"Atendido\" por defecto\r\n  });\r\n\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const [selectedPedido, setSelectedPedido] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchPedidos();\r\n    fetchClientes();\r\n  }, []);\r\n\r\n  const fetchPedidos = async () => {\r\n    const data = await getPedidos();\r\n    setPedidos(data);\r\n  };\r\n\r\n  const fetchClientes = async () => {\r\n    const data = await getClientes();\r\n    // Añadir la opción \"Otros\" al final de la lista\r\n    const clientesConOtros = [...data, { num_cliente: '999', nom_cliente: 'Otros' }];\r\n    setClientes(clientesConOtros);\r\n\r\n    // Setear el primer cliente como valor por defecto\r\n    if (clientesConOtros.length > 0) {\r\n      setForm((prevForm) => ({\r\n        ...prevForm,\r\n        num_cliente: clientesConOtros[0].num_cliente\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm({\r\n      ...form,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    if (!form.num_pedido || !form.num_pedido.startsWith('PA') || form.num_pedido.length > 10) {\r\n      alert('El número de pedido debe comenzar con \"PA\" y tener máximo 10 caracteres');\r\n      return false;\r\n    }\r\n    if (!form.num_cliente) {\r\n      alert('El cliente es obligatorio');\r\n      return false;\r\n    }\r\n    if (form.num_cliente === '999' && (!form.des_cliente || form.des_cliente.length > 50)) {\r\n      alert('La descripción del cliente es obligatoria y no debe exceder 50 caracteres cuando se selecciona \"Otros\"');\r\n      return false;\r\n    }\r\n    if (!form.cod_tipo_pago) {\r\n      alert('El tipo de pago es obligatorio');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmitAdd = async (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      const formToSend = {\r\n        ...form,\r\n        cod_tipopago: form.cod_tipo_pago, // Renombrar la llave\r\n      };\r\n      delete formToSend.cod_tipo_pago; // Eliminar la llave antigua\r\n      await addPedido(formToSend);\r\n      fetchPedidos();\r\n      handleCloseAdd();\r\n    }\r\n  };\r\n\r\n  const handleShowAdd = () => {\r\n    setShowAdd(true);\r\n    const clienteSeleccionado = clientes.find(c => c.num_cliente === form.num_cliente);\r\n    setForm({\r\n      num_pedido: \"\",\r\n      num_cliente: clientes.length > 0 ? clientes[0].num_cliente : \"\", // Primer cliente por defecto\r\n      des_cliente: clienteSeleccionado ? clienteSeleccionado.nom_cliente : \"\", // Copiar nom_cliente\r\n      fec_pedido: new Date().toISOString().split('T')[0], // Fecha actual\r\n      cod_tipo_pago: \"01\", // \"Crédito\" por defecto\r\n      cod_estado: \"01\" // \"Atendido\" por defecto\r\n    });\r\n  };\r\n\r\n  const handleCloseAdd = () => {\r\n    setShowAdd(false);\r\n    setForm({\r\n      num_pedido: \"\",\r\n      num_cliente: clientes.length > 0 ? clientes[0].num_cliente : \"\", // Primer cliente por defecto\r\n      des_cliente: \"\",\r\n      fec_pedido: new Date().toISOString().split('T')[0], // Fecha actual\r\n      cod_tipo_pago: \"01\", // \"Crédito\" por defecto\r\n      cod_estado: \"01\" // \"Atendido\" por defecto\r\n    });\r\n  };\r\n\r\n  const handleShowEdit = (pedido) => {\r\n    const clienteSeleccionado = clientes.find(c => c.num_cliente === pedido.num_cliente);\r\n    setSelectedPedido(pedido);\r\n    setForm({\r\n      num_pedido: pedido.num_pedido,\r\n      num_cliente: pedido.num_cliente,\r\n      des_cliente: clienteSeleccionado ? clienteSeleccionado.nom_cliente : pedido.des_cliente, // Copiar nom_cliente\r\n      fec_pedido: pedido.fec_pedido,\r\n      cod_tipo_pago: pedido.cod_tipo_pago,\r\n      cod_estado: pedido.cod_estado\r\n    });\r\n    setShowEdit(true);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setShowEdit(false);\r\n    setForm({\r\n      num_pedido: \"\",\r\n      num_cliente: \"\",\r\n      des_cliente: \"\",\r\n      fec_pedido: new Date().toISOString().split('T')[0],\r\n      cod_tipo_pago: \"\",\r\n      cod_estado: \"01\"\r\n    });\r\n  };\r\n\r\n  const handleSubmitEdit = async (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      const formToSend = {\r\n        ...form,\r\n        cod_tipopago: form.cod_tipo_pago, // Renombrar la llave\r\n      };\r\n      delete formToSend.cod_tipo_pago; // Eliminar la llave antigua\r\n      await updatePedido(selectedPedido.num_pedido, formToSend);\r\n      fetchPedidos();\r\n      handleCloseEdit();\r\n    }\r\n  };\r\n\r\n  const handleShowDelete = (pedido) => {\r\n    setSelectedPedido(pedido);\r\n    setShowDelete(true);\r\n  };\r\n  const handleCloseDelete = () => setShowDelete(false);\r\n  const handleDelete = async () => {\r\n    await deletePedido(selectedPedido.num_pedido);\r\n    fetchPedidos();\r\n    setShowDelete(false);\r\n  };\r\n\r\n  // Funciones helper para obtener descripciones\r\n  const getClienteDesc = (num) => {\r\n    const cliente = clientes.find(c => c.num_cliente === num);\r\n    return cliente ? `${cliente.nom_cliente}` : num;\r\n  };\r\n\r\n  const getTipoPagoDesc = (cod) => {\r\n    const tipo = TIPOS_PAGO.find(t => t.cod === cod);\r\n    return tipo ? tipo.desc : cod;\r\n  };\r\n\r\n  const getEstadoDesc = (cod) => {\r\n    const estado = ESTADOS.find(e => e.cod === cod);\r\n    return estado ? estado.desc : cod;\r\n  };\r\n\r\n  // Calcular pedidos para la página actual\r\n  const indexOfLastPedido = currentPage * ordersPerPage;\r\n  const indexOfFirstPedido = indexOfLastPedido - ordersPerPage;\r\n  const currentPedidos = pedidos.slice(indexOfFirstPedido, indexOfLastPedido);\r\n\r\n  // Calcular el número total de páginas\r\n  const totalPages = Math.ceil(pedidos.length / ordersPerPage);\r\n\r\n  // Función para cambiar de página\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"p-0\">\r\n      <Card>\r\n        <Card.Body className=\"p-3\">\r\n          <Card.Title className=\"mb-3\">Pedidos</Card.Title>\r\n          <Row className=\"mb-3\">\r\n            <Col xs={12} md={6} className=\"d-flex align-items-center justify-content-start mb-2 mb-md-0\">\r\n              <Button id=\"agregarPedido\" className=\"mr-2\" onClick={handleShowAdd} title=\"Agregar\">\r\n                <i className=\"fa fa-plus\"></i>\r\n              </Button>\r\n              <Form.Group className=\"flex-grow-1\">\r\n                <Form.Control type=\"text\" placeholder=\"Buscar\" id=\"txtBuscar\" className=\"rounded\" />\r\n              </Form.Group>\r\n              <Button type=\"button\" className=\"btn btn-secondary ml-2\" title=\"Filtrar\">\r\n                <i className=\"fa fa-search\"></i>\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"table-responsive\" id=\"tabPedido\">\r\n            <Table>\r\n              <caption>Tabla de Pedidos</caption>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Opciones</th>\r\n                  <th>N° Pedido</th>\r\n                  <th>Cliente</th>\r\n                  <th>Descripción Cliente</th>\r\n                  <th>Fecha</th>\r\n                  <th>Tipo Pago</th>\r\n                  <th>Estado</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {currentPedidos.map((pedido, index) => (\r\n                  <tr key={index}>\r\n                    <th>{indexOfFirstPedido + index + 1}</th>\r\n                    <td>\r\n                      <div className=\"btn-group\" role=\"group\">\r\n                        <Button\r\n                          type=\"button\"\r\n                          className=\"btn btn-secondary btn-sm mb-1\"\r\n                          title=\"Editar\"\r\n                          onClick={() => handleShowEdit(pedido)}\r\n                        >\r\n                          <i className=\"fa fa-pencil\"></i>\r\n                        </Button>\r\n                        <Button\r\n                          type=\"button\"\r\n                          className=\"btn btn-danger btn-sm mb-1 ml-1\"\r\n                          title=\"Eliminar\"\r\n                          onClick={() => handleShowDelete(pedido)}\r\n                        >\r\n                          <i className=\"fa fa-trash-o\"></i>\r\n                        </Button>\r\n                      </div>\r\n                    </td>\r\n                    <td>{pedido.num_pedido}</td>\r\n                    <td>{getClienteDesc(pedido.num_cliente)}</td>\r\n                    <td>{pedido.des_cliente}</td>\r\n                    <td>{new Date(pedido.fec_pedido).toLocaleDateString()}</td>\r\n                    <td>{getTipoPagoDesc(pedido.cod_tipopago)}</td>\r\n                    <td>{getEstadoDesc(pedido.cod_estado)}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n            {totalPages > 1 && (\r\n              <div className=\"d-flex justify-content-center mt-3\">\r\n                <Pagination>\r\n                  <Pagination.First \r\n                    onClick={() => handlePageChange(1)} \r\n                    disabled={currentPage === 1}\r\n                  />\r\n                  <Pagination.Prev \r\n                    onClick={() => handlePageChange(currentPage - 1)} \r\n                    disabled={currentPage === 1}\r\n                  />\r\n                  {[...Array(totalPages)].map((_, index) => (\r\n                    <Pagination.Item\r\n                      key={index + 1}\r\n                      active={index + 1 === currentPage}\r\n                      onClick={() => handlePageChange(index + 1)}\r\n                    >\r\n                      {index + 1}\r\n                    </Pagination.Item>\r\n                  ))}\r\n                  <Pagination.Next \r\n                    onClick={() => handlePageChange(currentPage + 1)} \r\n                    disabled={currentPage === totalPages}\r\n                  />\r\n                  <Pagination.Last \r\n                    onClick={() => handlePageChange(totalPages)} \r\n                    disabled={currentPage === totalPages}\r\n                  />\r\n                </Pagination>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Modal para agregar pedido */}\r\n      <Modal show={showAdd} onHide={handleCloseAdd} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Registrar Pedido</Modal.Title>\r\n        </Modal.Header>\r\n        <Form id=\"formRegistro\" autoComplete=\"off\" onSubmit={handleSubmitAdd}>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"num_pedido\">\r\n                  <Form.Label>Número de Pedido</Form.Label>\r\n                  <Form.Control \r\n                    type=\"text\" \r\n                    name=\"num_pedido\" \r\n                    value={form.num_pedido} \r\n                    onChange={handleChange} \r\n                    required \r\n                    maxLength={10}\r\n                    placeholder=\"PA0001\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"num_cliente\">\r\n                  <Form.Label>Cliente</Form.Label>\r\n                  <Form.Select \r\n                    name=\"num_cliente\" \r\n                    value={form.num_cliente} \r\n                    onChange={handleChange} \r\n                    required\r\n                  >\r\n                    <option value=\"\">Seleccione un cliente</option>\r\n                    {clientes.map(cliente => (\r\n                      <option key={cliente.num_cliente} value={cliente.num_cliente}>\r\n                        {cliente.num_cliente}-{cliente.nom_cliente}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n              {form.num_cliente === '999' && (\r\n                <Col md={6} className=\"mb-3\">\r\n                  <Form.Group controlId=\"des_cliente\">\r\n                    <Form.Label>Descripción del Cliente</Form.Label>\r\n                    <Form.Control \r\n                      type=\"text\" \r\n                      name=\"des_cliente\" \r\n                      value={form.des_cliente} \r\n                      onChange={handleChange} \r\n                      maxLength={50}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              )}\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"fec_pedido\">\r\n                  <Form.Label>Fecha de Pedido</Form.Label>\r\n                  <Form.Control \r\n                    type=\"date\" \r\n                    name=\"fec_pedido\" \r\n                    value={form.fec_pedido} \r\n                    onChange={handleChange} \r\n                    disabled // Bloqueado\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"cod_tipo_pago\">\r\n                  <Form.Label>Tipo de Pago</Form.Label>\r\n                  <Form.Select \r\n                    name=\"cod_tipo_pago\" \r\n                    value={form.cod_tipo_pago} \r\n                    onChange={handleChange} \r\n                    required\r\n                  >\r\n                    <option value=\"\">Seleccione tipo de pago</option>\r\n                    {TIPOS_PAGO.map(tipo => (\r\n                      <option key={tipo.cod} value={tipo.cod}>{tipo.desc}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"cod_estado\">\r\n                  <Form.Label>Estado</Form.Label>\r\n                  <Form.Select \r\n                    name=\"cod_estado\" \r\n                    value={form.cod_estado} \r\n                    onChange={handleChange} \r\n                    disabled // Bloqueado\r\n                  >\r\n                    {ESTADOS.map(estado => (\r\n                      <option key={estado.cod} value={estado.cod}>{estado.desc}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button type=\"submit\" variant=\"outline-primary\"> Registrar </Button>\r\n            <Button variant=\"outline-secondary\" onClick={handleCloseAdd}> Cancelar </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n\r\n      {/* Modal para editar pedido */}\r\n      <Modal show={showEdit} onHide={handleCloseEdit} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Editar Pedido</Modal.Title>\r\n        </Modal.Header>\r\n        <Form id=\"formEditar\" autoComplete=\"off\" onSubmit={handleSubmitEdit}>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"num_pedido\">\r\n                  <Form.Label>Número de Pedido</Form.Label>\r\n                  <Form.Control \r\n                    type=\"text\" \r\n                    name=\"num_pedido\" \r\n                    value={form.num_pedido} \r\n                    onChange={handleChange} \r\n                    required \r\n                    maxLength={10}\r\n                    placeholder=\"PA0001\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"num_cliente\">\r\n                  <Form.Label>Cliente</Form.Label>\r\n                  <Form.Select \r\n                    name=\"num_cliente\" \r\n                    value={form.num_cliente} \r\n                    onChange={handleChange} \r\n                    required\r\n                  >\r\n                    <option value=\"\">Seleccione un cliente</option>\r\n                    {clientes.map(cliente => (\r\n                      <option key={cliente.num_cliente} value={cliente.num_cliente}>\r\n                        {cliente.num_cliente}-{cliente.nom_cliente}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n              {form.num_cliente === '999' && (\r\n                <Col md={6} className=\"mb-3\">\r\n                  <Form.Group controlId=\"des_cliente\">\r\n                    <Form.Label>Descripción del Cliente</Form.Label>\r\n                    <Form.Control \r\n                      type=\"text\" \r\n                      name=\"des_cliente\" \r\n                      value={form.des_cliente} \r\n                      onChange={handleChange} \r\n                      maxLength={50}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              )}\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"fec_pedido\">\r\n                  <Form.Label>Fecha de Pedido</Form.Label>\r\n                  <Form.Control \r\n                    type=\"date\" \r\n                    name=\"fec_pedido\" \r\n                    value={form.fec_pedido} \r\n                    onChange={handleChange} \r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"cod_tipo_pago\">\r\n                  <Form.Label>Tipo de Pago</Form.Label>\r\n                  <Form.Select \r\n                    name=\"cod_tipo_pago\" \r\n                    value={form.cod_tipo_pago} \r\n                    onChange={handleChange} \r\n                    required\r\n                  >\r\n                    <option value=\"\">Seleccione tipo de pago</option>\r\n                    {TIPOS_PAGO.map(tipo => (\r\n                      <option key={tipo.cod} value={tipo.cod}>{tipo.desc}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"cod_estado\">\r\n                  <Form.Label>Estado</Form.Label>\r\n                  <Form.Select \r\n                    name=\"cod_estado\" \r\n                    value={form.cod_estado} \r\n                    onChange={handleChange} \r\n                    required\r\n                  >\r\n                    {ESTADOS.map(estado => (\r\n                      <option key={estado.cod} value={estado.cod}>{estado.desc}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button type=\"submit\" variant=\"outline-primary\"> Guardar </Button>\r\n            <Button variant=\"outline-secondary\" onClick={handleCloseEdit}> Cancelar </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n\r\n      {/* Modal para eliminar pedido */}\r\n      <Modal show={showDelete} onHide={handleCloseDelete}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Eliminar Pedido</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          ¿Estás seguro de que deseas eliminar el pedido:{\" \"}\r\n          <strong>{selectedPedido && selectedPedido.num_pedido}</strong>?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"danger\" onClick={handleDelete}> Eliminar </Button>\r\n          <Button variant=\"secondary\" onClick={handleCloseDelete}> Cancelar </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Pedido;\r\n","import request from '../apiService';\r\n\r\nconst getPedidos = async () => request('/api/v1/almacen/pedidos');\r\nconst getPedido = async (id) => request(`/api/v1/almacen/pedidos/${id}`);\r\nconst addPedido = async (pedido) => request('/api/v1/almacen/pedidos', 'POST', pedido);\r\nconst updatePedido = async (id, updates) => request(`/api/v1/almacen/pedidos/${id}`, 'PUT', updates);\r\nconst deletePedido = async (id) => request(`/api/v1/almacen/pedidos/${id}`, 'DELETE');\r\nconst getMaxNumPedido = async () => request('/api/v1/almacen/maxnumpedido', 'GET');\r\n\r\nexport { getPedidos, getPedido, addPedido, updatePedido, deletePedido, getMaxNumPedido };\r\n","import request from '../apiService';\r\n\r\nconst getClientes = async () => request('/api/v1/ventas/clientes');\r\nconst getCliente = async (num_cliente) => request(`/api/v1/ventas/clientes/${num_cliente}`);\r\nconst addCliente = async (cliente) => request('/api/v1/ventas/clientes', 'POST', cliente);\r\nconst updateCliente = async (num_cliente, updates) => request(`/api/v1/ventas/clientes/${num_cliente}`, 'PUT', updates);\r\nconst deleteCliente = async (num_cliente) => request(`/api/v1/ventas/clientes/${num_cliente}`, 'DELETE');\r\n\r\nexport { getClientes, getCliente, addCliente, updateCliente, deleteCliente };\r\n","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active = false,\n  disabled = false,\n  className,\n  style,\n  activeLabel = '(current)',\n  children,\n  linkStyle,\n  linkClassName,\n  as = Anchor,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : as;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: classNames('page-link', linkClassName),\n      style: linkStyle,\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.displayName = 'PageItem';\nexport default PageItem;\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, {\n    ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});"],"names":["TIPOS_PAGO","cod","desc","ESTADOS","Pedido","pedidos","setPedidos","useState","clientes","setClientes","currentPage","setCurrentPage","ordersPerPage","form","setForm","num_pedido","num_cliente","des_cliente","fec_pedido","Date","toISOString","split","cod_tipo_pago","cod_estado","showAdd","setShowAdd","showEdit","setShowEdit","showDelete","setShowDelete","selectedPedido","setSelectedPedido","useEffect","fetchPedidos","fetchClientes","async","data","request","getPedidos","clientesConOtros","getClientes","nom_cliente","length","prevForm","handleChange","e","name","value","target","validateForm","startsWith","alert","handleCloseAdd","handleCloseEdit","handleCloseDelete","getClienteDesc","num","cliente","find","c","getTipoPagoDesc","tipo","t","getEstadoDesc","estado","indexOfLastPedido","indexOfFirstPedido","currentPedidos","slice","totalPages","Math","ceil","handlePageChange","pageNumber","_jsxs","Container","fluid","className","children","_jsx","Card","Body","Title","Row","Col","xs","md","Button","id","onClick","handleShowAdd","clienteSeleccionado","title","Form","Group","Control","type","placeholder","Table","map","pedido","index","role","handleShowEdit","handleShowDelete","toLocaleDateString","cod_tipopago","Pagination","First","disabled","Prev","Array","_","Item","active","Next","Last","Modal","show","onHide","size","Header","closeButton","autoComplete","onSubmit","preventDefault","formToSend","addPedido","controlId","Label","onChange","required","maxLength","Select","Footer","variant","updates","updatePedido","deletePedido","addCliente","updateCliente","deleteCliente","PageItem","React","_ref","ref","style","activeLabel","linkStyle","linkClassName","as","Anchor","props","Component","classNames","displayName","createButton","defaultValue","label","arguments","undefined","_ref2","Ellipsis","bsPrefix","decoratedBsPrefix","useBootstrapPrefix","Object","assign"],"sourceRoot":""}