{"version":3,"file":"static/js/835.6c7e97ab.chunk.js","mappings":"2PAKA,MAAMA,EAAS,CACb,CAAEC,IAAK,KAAMC,KAAM,mBACnB,CAAED,IAAK,KAAMC,KAAM,aACnB,CAAED,IAAK,KAAMC,KAAM,YACnB,CAAED,IAAK,KAAMC,KAAM,UACnB,CAAED,IAAK,KAAMC,KAAM,SAGfC,EAAc,CAClB,CAAEF,IAAK,IAAKC,KAAM,mBAClB,CAAED,IAAK,IAAKC,KAAM,aAClB,CAAED,IAAK,IAAKC,KAAM,YAClB,CAAED,IAAK,IAAKC,KAAM,UAClB,CAAED,IAAK,KAAMC,KAAM,SAGfE,EAAW,CACf,CAAEH,IAAK,MAAOC,KAAM,gBACpB,CAAED,IAAK,KAAMC,KAAM,aACnB,CAAED,IAAK,MAAOC,KAAM,gBACpB,CAAED,IAAK,MAAOC,KAAM,iBACpB,CAAED,IAAK,MAAOC,KAAM,kBACpB,CAAED,IAAK,MAAOC,KAAM,eACpB,CAAED,IAAK,MAAOC,KAAM,gBACpB,CAAED,IAAK,MAAOC,KAAM,sBACpB,CAAED,IAAK,KAAMC,KAAM,iBACnB,CAAED,IAAK,MAAOC,KAAM,eAGhBG,EAAa,CACjB,CAAEJ,IAAK,KAAMC,KAAM,SACnB,CAAED,IAAK,KAAMC,KAAM,WACnB,CAAED,IAAK,KAAMC,KAAM,YACnB,CAAED,IAAK,KAAMC,KAAM,UACnB,CAAED,IAAK,KAAMC,KAAM,WACnB,CAAED,IAAK,KAAMC,KAAM,aACnB,CAAED,IAAK,KAAMC,KAAM,SAofrB,EAjfiBI,KACf,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,IACxCG,IAAmBH,EAAAA,EAAAA,UAAS,KAC5BI,EAAMC,IAAWL,EAAAA,EAAAA,UAAS,CAC/BM,aAAc,GACdC,UAAW,GACXC,aAAc,GACdC,UAAW,GACXC,cAAe,GACfC,WAAY,GACZC,cAAe,MAGVC,EAASC,IAAcd,EAAAA,EAAAA,WAAS,IAChCe,EAAUC,IAAehB,EAAAA,EAAAA,WAAS,IAClCiB,EAAYC,IAAiBlB,EAAAA,EAAAA,WAAS,IACtCmB,EAAkBC,IAAuBpB,EAAAA,EAAAA,UAAS,OAEzDqB,EAAAA,EAAAA,YAAU,KACRC,GAAgB,GACf,IAEH,MAAMA,EAAiBC,UACrB,MAAMC,OClEWD,WAAYE,EAAAA,EAAAA,GAAQ,6BDkElBC,GACnB3B,EAAayB,EAAK,EAGdG,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1B1B,EAAQ,IACHD,EACH,CAACyB,GAAOC,GACR,EAGEE,EAAeA,KACd5B,EAAKE,cAAgBF,EAAKE,aAAa2B,OAAS,GAAK7B,EAAKE,aAAa2B,OAAS,GACnFC,MAAM,+DACC,IAEJ9B,EAAKG,WAAaH,EAAKG,UAAU0B,OAAS,IAC7CC,MAAM,2EACC,GAEJ9B,EAAKO,aAINP,EAAKI,cAAgBJ,EAAKI,aAAayB,OAAS,OAClDC,MAAM,qDACC,IALPA,MAAM,6BACC,GAmBLC,EAAiBA,KACrBrB,GAAW,GACXT,EAAQ,CACNC,aAAc,GACdC,UAAW,GACXC,aAAc,GACdC,UAAW,GACXC,cAAe,GACfC,WAAY,GACZC,cAAe,IACf,EAiBEwB,EAAkBA,KACtBpB,GAAY,GACZX,EAAQ,CACNC,aAAc,GACdC,UAAW,GACXC,aAAc,GACdC,UAAW,GACXC,cAAe,GACfC,WAAY,GACZC,cAAe,IACf,EAgBEyB,EAAoBA,IAAMnB,GAAc,GAQxCoB,EAAgB9C,IACpB,MAAM+C,EAAQhD,EAAOiD,MAAKC,GAAKA,EAAEjD,MAAQA,IACzC,OAAO+C,EAAQA,EAAM9C,KAAOD,CAAG,EAG3BkD,EAAoBlD,IACxB,MAAMmD,EAAYjD,EAAY8C,MAAKI,GAAKA,EAAEpD,MAAQqD,OAAOrD,KACzD,OAAOmD,EAAYA,EAAUlD,KAAOD,CAAG,EAGnCsD,EAAoBtD,IACxB,MAAMuD,EAAYnD,EAAW4C,MAAKQ,GAAKA,EAAExD,MAAQA,IACjD,OAAOuD,EAAYA,EAAUtD,KAAOD,CAAG,EAGnCyD,EAAiBzD,IACrB,MAAM0D,EAASvD,EAAS6C,MAAKW,GAAKA,EAAE3D,MAAQA,IAC5C,OAAO0D,EAASA,EAAOzD,KAAOD,CAAG,EAI7B4D,EAAqBnD,EAAcE,EACnCkD,EAAsBD,EAAqBjD,EAC3CmD,EAAkBxD,EAAUyD,MAAMF,EAAqBD,GAGvDI,EAAaC,KAAKC,KAAK5D,EAAUmC,OAAS9B,GAG1CwD,EAAoBC,IACxB1D,EAAe0D,EAAW,EAG5B,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,OAAK,EAACC,UAAU,MAAKC,SAAA,EAC9BC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAAAF,UACHJ,EAAAA,EAAAA,MAACM,EAAAA,EAAKC,KAAI,CAACJ,UAAU,MAAKC,SAAA,EACxBC,EAAAA,EAAAA,KAACC,EAAAA,EAAKE,MAAK,CAACL,UAAU,OAAMC,SAAC,eAC7BC,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACN,UAAU,OAAMC,UACnBJ,EAAAA,EAAAA,MAACU,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,EAAGT,UAAU,+DAA8DC,SAAA,EAC1FC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACC,GAAG,kBAAkBX,UAAU,OAAOY,QAtGpCC,IAAM/D,GAAW,GAsG2CgE,MAAM,UAASb,UACnFC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,kBAEfE,EAAAA,EAAAA,KAACa,EAAAA,EAAKC,MAAK,CAAChB,UAAU,cAAaC,UACjCC,EAAAA,EAAAA,KAACa,EAAAA,EAAKE,QAAO,CAACC,KAAK,OAAOC,YAAY,SAASR,GAAG,YAAYX,UAAU,eAE1EE,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACQ,KAAK,SAASlB,UAAU,yBAAyBc,MAAM,UAASb,UACtEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,yBAInBH,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAmBW,GAAG,cAAaV,SAAA,EAChDJ,EAAAA,EAAAA,MAACuB,EAAAA,EAAK,CAAAnB,SAAA,EACJC,EAAAA,EAAAA,KAAA,WAAAD,SAAS,wBACTC,EAAAA,EAAAA,KAAA,SAAAD,UACEJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,OACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,SACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBAGRC,EAAAA,EAAAA,KAAA,SAAAD,SAAQX,EAAgB+B,KAAI,CAACC,EAAUC,KACrC1B,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKZ,EAAsBkC,EAAQ,KACnCrB,EAAAA,EAAAA,KAAA,MAAAD,UACEJ,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAYwB,KAAK,QAAOvB,SAAA,EACrCJ,EAAAA,EAAAA,MAACa,EAAAA,EAAM,CAACQ,KAAK,SAASlB,UAAU,gCAAgCc,MAAM,SAASF,QAASA,IAxHpFU,KACtBlE,EAAoBkE,GACpBjF,EAAQ,CACNC,aAAcgF,EAAShF,aACvBC,UAAW+E,EAAS/E,UACpBC,aAAc8E,EAAS9E,aACvBC,UAAW6E,EAAS7E,UACpBC,cAAe4E,EAAS5E,cACxBC,WAAY2E,EAAS3E,WACrBC,cAAe0E,EAAS1E,gBAE1BI,GAAY,EAAK,EA6G+FyE,CAAeH,GAAUrB,SAAA,CAAC,KAACC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBAEtIH,EAAAA,EAAAA,MAACa,EAAAA,EAAM,CAACQ,KAAK,SAASlB,UAAU,kCAAkCc,MAAM,WAAWF,QAASA,IAtFtFU,KACxBlE,EAAoBkE,GACpBpE,GAAc,EAAK,EAoFiGwE,CAAiBJ,GAAUrB,SAAA,CAAC,KAACC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,2BAIhJE,EAAAA,EAAAA,KAAA,MAAAD,SAAKqB,EAAShF,gBACd4D,EAAAA,EAAAA,KAAA,MAAAD,SAAKqB,EAAS/E,aACd2D,EAAAA,EAAAA,KAAA,MAAAD,SAAKqB,EAAS9E,gBACd0D,EAAAA,EAAAA,KAAA,MAAAD,SAAK3B,EAAagD,EAAS7E,cAC3ByD,EAAAA,EAAAA,KAAA,MAAAD,SAAKvB,EAAiB4C,EAAS5E,kBAC/BwD,EAAAA,EAAAA,KAAA,MAAAD,SAAKhB,EAAcqC,EAAS3E,eAC5BuD,EAAAA,EAAAA,KAAA,MAAAD,SAAKnB,EAAiBwC,EAAS1E,mBAhBxB2E,UAqBZ/B,EAAa,IACZU,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qCAAoCC,UACjDJ,EAAAA,EAAAA,MAAC8B,EAAAA,EAAU,CAAA1B,SAAA,EACTC,EAAAA,EAAAA,KAACyB,EAAAA,EAAWC,MAAK,CACfhB,QAASA,IAAMjB,EAAiB,GAChCkC,SAA0B,IAAhB5F,KAEZiE,EAAAA,EAAAA,KAACyB,EAAAA,EAAWG,KAAI,CACdlB,QAASA,IAAMjB,EAAiB1D,EAAc,GAC9C4F,SAA0B,IAAhB5F,IAEX,IAAI8F,MAAMvC,IAAa6B,KAAI,CAACW,EAAGT,KAC9BrB,EAAAA,EAAAA,KAACyB,EAAAA,EAAWM,KAAI,CAEdC,OAAQX,EAAQ,IAAMtF,EACtB2E,QAASA,IAAMjB,EAAiB4B,EAAQ,GAAGtB,SAE1CsB,EAAQ,GAJJA,EAAQ,MAOjBrB,EAAAA,EAAAA,KAACyB,EAAAA,EAAWQ,KAAI,CACdvB,QAASA,IAAMjB,EAAiB1D,EAAc,GAC9C4F,SAAU5F,IAAgBuD,KAE5BU,EAAAA,EAAAA,KAACyB,EAAAA,EAAWS,KAAI,CACdxB,QAASA,IAAMjB,EAAiBH,GAChCqC,SAAU5F,IAAgBuD,kBASxCK,EAAAA,EAAAA,MAACwC,EAAAA,EAAK,CAACC,KAAMzF,EAAS0F,OAAQpE,EAAgBqE,KAAK,KAAIvC,SAAA,EACrDC,EAAAA,EAAAA,KAACmC,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAAzC,UACvBC,EAAAA,EAAAA,KAACmC,EAAAA,EAAMhC,MAAK,CAAAJ,SAAC,0BAEfJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAI,CAACJ,GAAG,eAAegC,aAAa,MAAMC,SAvMzBrF,UACtBK,EAAEiF,iBACE7E,WClGYT,WAAoBE,EAAAA,EAAAA,GAAQ,4BAA6B,OAAQ6D,GDmGzEwB,CAAY1G,GAClBkB,IACAa,IACF,EAiMyE8B,SAAA,EACnEC,EAAAA,EAAAA,KAACmC,EAAAA,EAAMjC,KAAI,CAAAH,UACTJ,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAAAL,SAAA,EACFC,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACE,GAAI,EAAGT,UAAU,OAAMC,UAC1BJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKC,MAAK,CAAC+B,UAAU,eAAc9C,SAAA,EAClCC,EAAAA,EAAAA,KAACa,EAAAA,EAAKiC,MAAK,CAAA/C,SAAC,2BACZC,EAAAA,EAAAA,KAACa,EAAAA,EAAKE,QAAO,CACXC,KAAK,OACLrD,KAAK,eACLC,MAAO1B,EAAKE,aACZ2G,SAAUtF,EACVuF,UAAQ,EACRC,UAAW,EACXC,UAAW,UAIjBlD,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACE,GAAI,EAAGT,UAAU,OAAMC,UAC1BJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKC,MAAK,CAAC+B,UAAU,YAAW9C,SAAA,EAC/BC,EAAAA,EAAAA,KAACa,EAAAA,EAAKiC,MAAK,CAAA/C,SAAC,0BACZC,EAAAA,EAAAA,KAACa,EAAAA,EAAKE,QAAO,CACXC,KAAK,OACLrD,KAAK,YACLC,MAAO1B,EAAKG,UACZ0G,SAAUtF,EACVuF,UAAQ,EACRC,UAAW,WAIjBjD,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACE,GAAI,EAAGT,UAAU,OAAMC,UAC1BJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKC,MAAK,CAAC+B,UAAU,eAAc9C,SAAA,EAClCC,EAAAA,EAAAA,KAACa,EAAAA,EAAKiC,MAAK,CAAA/C,SAAC,iCACZC,EAAAA,EAAAA,KAACa,EAAAA,EAAKE,QAAO,CACXC,KAAK,OACLrD,KAAK,eACLC,MAAO1B,EAAKI,aACZyG,SAAUtF,EACVwF,UAAW,YAIjBjD,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACE,GAAI,EAAGT,UAAU,OAAMC,UAC1BJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKC,MAAK,CAAC+B,UAAU,YAAW9C,SAAA,EAC/BC,EAAAA,EAAAA,KAACa,EAAAA,EAAKiC,MAAK,CAAA/C,SAAC,WACZJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKsC,OAAM,CACVxF,KAAK,YACLC,MAAO1B,EAAKK,UACZwG,SAAUtF,EAAasC,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,GAAEmC,SAAC,yBAChB1E,EAAO8F,KAAI9C,IACV2B,EAAAA,EAAAA,KAAA,UAAwBpC,MAAOS,EAAM/C,IAAIyE,SAAE1B,EAAM9C,MAApC8C,EAAM/C,gBAK3B0E,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACE,GAAI,EAAGT,UAAU,OAAMC,UAC1BJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKC,MAAK,CAAC+B,UAAU,gBAAe9C,SAAA,EACnCC,EAAAA,EAAAA,KAACa,EAAAA,EAAKiC,MAAK,CAAA/C,SAAC,eACZJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKsC,OAAM,CACVxF,KAAK,gBACLC,MAAO1B,EAAKM,cACZuG,SAAUtF,EAAasC,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,GAAEmC,SAAC,4BAChBvE,EAAY2F,KAAIiC,IACfpD,EAAAA,EAAAA,KAAA,UAAuBpC,MAAOwF,EAAK9H,IAAIyE,SAAEqD,EAAK7H,MAAjC6H,EAAK9H,gBAK1B0E,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACE,GAAI,EAAGT,UAAU,OAAMC,UAC1BJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKC,MAAK,CAAC+B,UAAU,aAAY9C,SAAA,EAChCC,EAAAA,EAAAA,KAACa,EAAAA,EAAKiC,MAAK,CAAA/C,SAAC,YACZJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKsC,OAAM,CACVxF,KAAK,aACLC,MAAO1B,EAAKO,WACZsG,SAAUtF,EACVuF,UAAQ,EAAAjD,SAAA,EAERC,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,GAAEmC,SAAC,0BAChBtE,EAAS0F,KAAInC,IACZgB,EAAAA,EAAAA,KAAA,UAAyBpC,MAAOoB,EAAO1D,IAAIyE,SAAEf,EAAOzD,MAAvCyD,EAAO1D,gBAK5B0E,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACE,GAAI,EAAGT,UAAU,OAAMC,UAC1BJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKC,MAAK,CAAC+B,UAAU,gBAAe9C,SAAA,EACnCC,EAAAA,EAAAA,KAACa,EAAAA,EAAKiC,MAAK,CAAA/C,SAAC,kBACZJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKsC,OAAM,CACVxF,KAAK,gBACLC,MAAO1B,EAAKQ,cACZqG,SAAUtF,EAAasC,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,GAAEmC,SAAC,gCAChBrE,EAAWyF,KAAIkC,IACdrD,EAAAA,EAAAA,KAAA,UAAsBpC,MAAOyF,EAAI/H,IAAIyE,SAAEsD,EAAI9H,MAA9B8H,EAAI/H,qBAO7BqE,EAAAA,EAAAA,MAACwC,EAAAA,EAAMmB,OAAM,CAAAvD,SAAA,EACXC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACQ,KAAK,SAASuC,QAAQ,kBAAiBxD,SAAC,iBAChDC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAAC+C,QAAQ,oBAAoB7C,QAASzC,EAAe8B,SAAC,yBAKnEJ,EAAAA,EAAAA,MAACwC,EAAAA,EAAK,CAACC,KAAMvF,EAAUwF,OAAQnE,EAAiBoE,KAAK,KAAIvC,SAAA,EACvDC,EAAAA,EAAAA,KAACmC,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAAzC,UACvBC,EAAAA,EAAAA,KAACmC,EAAAA,EAAMhC,MAAK,CAAAJ,SAAC,uBAEfJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAI,CAACJ,GAAG,aAAagC,aAAa,MAAMC,SAzQtBrF,UACvBK,EAAEiF,iBACE7E,WCnJeT,OAAOoD,EAAI+C,KAAYjG,EAAAA,EAAAA,GAAQ,6BAA6BkD,IAAM,MAAO+C,GDoJpFC,CAAexG,EAAiByG,aAAcxH,GACpDkB,IACAc,IACF,EAmQwE6B,SAAA,EAClEC,EAAAA,EAAAA,KAACmC,EAAAA,EAAMjC,KAAI,CAAAH,UACTJ,EAAAA,EAAAA,MAACS,EAAAA,EAAG,CAAAL,SAAA,EACFC,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACE,GAAI,EAAGT,UAAU,OAAMC,UAC1BJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKC,MAAK,CAAC+B,UAAU,eAAc9C,SAAA,EAClCC,EAAAA,EAAAA,KAACa,EAAAA,EAAKiC,MAAK,CAAA/C,SAAC,2BACZC,EAAAA,EAAAA,KAACa,EAAAA,EAAKE,QAAO,CACXC,KAAK,OACLrD,KAAK,eACLC,MAAO1B,EAAKE,aACZ2G,SAAUtF,EACVuF,UAAQ,EACRC,UAAW,EACXC,UAAW,UAIjBlD,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACE,GAAI,EAAGT,UAAU,OAAMC,UAC1BJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKC,MAAK,CAAC+B,UAAU,YAAW9C,SAAA,EAC/BC,EAAAA,EAAAA,KAACa,EAAAA,EAAKiC,MAAK,CAAA/C,SAAC,0BACZC,EAAAA,EAAAA,KAACa,EAAAA,EAAKE,QAAO,CACXC,KAAK,OACLrD,KAAK,YACLC,MAAO1B,EAAKG,UACZ0G,SAAUtF,EACVuF,UAAQ,EACRC,UAAW,WAIjBjD,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACE,GAAI,EAAGT,UAAU,OAAMC,UAC1BJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKC,MAAK,CAAC+B,UAAU,eAAc9C,SAAA,EAClCC,EAAAA,EAAAA,KAACa,EAAAA,EAAKiC,MAAK,CAAA/C,SAAC,iCACZC,EAAAA,EAAAA,KAACa,EAAAA,EAAKE,QAAO,CACXC,KAAK,OACLrD,KAAK,eACLC,MAAO1B,EAAKI,aACZyG,SAAUtF,EACVwF,UAAW,YAIjBjD,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACE,GAAI,EAAGT,UAAU,OAAMC,UAC1BJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKC,MAAK,CAAC+B,UAAU,YAAW9C,SAAA,EAC/BC,EAAAA,EAAAA,KAACa,EAAAA,EAAKiC,MAAK,CAAA/C,SAAC,WACZJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKsC,OAAM,CACVxF,KAAK,YACLC,MAAO1B,EAAKK,UACZwG,SAAUtF,EAAasC,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,GAAEmC,SAAC,yBAChB1E,EAAO8F,KAAI9C,IACV2B,EAAAA,EAAAA,KAAA,UAAwBpC,MAAOS,EAAM/C,IAAIyE,SAAE1B,EAAM9C,MAApC8C,EAAM/C,gBAK3B0E,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACE,GAAI,EAAGT,UAAU,OAAMC,UAC1BJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKC,MAAK,CAAC+B,UAAU,gBAAe9C,SAAA,EACnCC,EAAAA,EAAAA,KAACa,EAAAA,EAAKiC,MAAK,CAAA/C,SAAC,eACZJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKsC,OAAM,CACVxF,KAAK,gBACLC,MAAO1B,EAAKM,cACZuG,SAAUtF,EAAasC,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,GAAEmC,SAAC,4BAChBvE,EAAY2F,KAAIiC,IACfpD,EAAAA,EAAAA,KAAA,UAAuBpC,MAAOwF,EAAK9H,IAAIyE,SAAEqD,EAAK7H,MAAjC6H,EAAK9H,gBAK1B0E,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACE,GAAI,EAAGT,UAAU,OAAMC,UAC1BJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKC,MAAK,CAAC+B,UAAU,aAAY9C,SAAA,EAChCC,EAAAA,EAAAA,KAACa,EAAAA,EAAKiC,MAAK,CAAA/C,SAAC,YACZJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKsC,OAAM,CACVxF,KAAK,aACLC,MAAO1B,EAAKO,WACZsG,SAAUtF,EACVuF,UAAQ,EAAAjD,SAAA,EAERC,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,GAAEmC,SAAC,0BAChBtE,EAAS0F,KAAInC,IACZgB,EAAAA,EAAAA,KAAA,UAAyBpC,MAAOoB,EAAO1D,IAAIyE,SAAEf,EAAOzD,MAAvCyD,EAAO1D,gBAK5B0E,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACE,GAAI,EAAGT,UAAU,OAAMC,UAC1BJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKC,MAAK,CAAC+B,UAAU,gBAAe9C,SAAA,EACnCC,EAAAA,EAAAA,KAACa,EAAAA,EAAKiC,MAAK,CAAA/C,SAAC,kBACZJ,EAAAA,EAAAA,MAACkB,EAAAA,EAAKsC,OAAM,CACVxF,KAAK,gBACLC,MAAO1B,EAAKQ,cACZqG,SAAUtF,EAAasC,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,GAAEmC,SAAC,gCAChBrE,EAAWyF,KAAIkC,IACdrD,EAAAA,EAAAA,KAAA,UAAsBpC,MAAOyF,EAAI/H,IAAIyE,SAAEsD,EAAI9H,MAA9B8H,EAAI/H,qBAO7BqE,EAAAA,EAAAA,MAACwC,EAAAA,EAAMmB,OAAM,CAAAvD,SAAA,EACXC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACQ,KAAK,SAASuC,QAAQ,kBAAiBxD,SAAC,eAChDC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAAC+C,QAAQ,oBAAoB7C,QAASxC,EAAgB6B,SAAC,yBAKpEJ,EAAAA,EAAAA,MAACwC,EAAAA,EAAK,CAACC,KAAMrF,EAAYsF,OAAQlE,EAAkB4B,SAAA,EACjDC,EAAAA,EAAAA,KAACmC,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAAzC,UACvBC,EAAAA,EAAAA,KAACmC,EAAAA,EAAMhC,MAAK,CAAAJ,SAAC,yBAEfJ,EAAAA,EAAAA,MAACwC,EAAAA,EAAMjC,KAAI,CAAAH,SAAA,CAAC,2DAAmD,IAAI,KAACC,EAAAA,EAAAA,KAAA,UAAAD,SAAS9C,GAAoBA,EAAiBX,eAAsB,SACxIqD,EAAAA,EAAAA,MAACwC,EAAAA,EAAMmB,OAAM,CAAAvD,SAAA,EACXC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAAC+C,QAAQ,SAAS7C,QAjXZrD,eC9JAA,WAAcE,EAAAA,EAAAA,GAAQ,6BAA6BkD,IAAM,UD+JtEkD,CAAe1G,EAAiByG,cACtCtG,IACAJ,GAAc,EAAM,EA8WiC+C,SAAC,gBAChDC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAAC+C,QAAQ,YAAY7C,QAASvC,EAAkB4B,SAAC,uBAGlD,C,gGEnhBhB,MAAM6D,EAAwBC,EAAAA,YAAiB,CAAAC,EAW5CC,KAAQ,IAXqC,OAC9C/B,GAAS,EAAK,SACdL,GAAW,EAAK,UAChB7B,EAAS,MACTkE,EAAK,YACLC,EAAc,YAAW,SACzBlE,EAAQ,UACRmE,EAAS,cACTC,EAAa,GACbC,EAAKC,EAAAA,KACFC,GACJR,EACC,MAAMS,EAAYvC,GAAUL,EAAW,OAASyC,EAChD,OAAoBpE,EAAAA,EAAAA,KAAK,KAAM,CAC7B+D,IAAKA,EACLC,MAAOA,EACPlE,UAAW0E,IAAW1E,EAAW,YAAa,CAC5CkC,SACAL,aAEF5B,UAAuBJ,EAAAA,EAAAA,MAAM4E,EAAW,CACtCzE,UAAW0E,IAAW,YAAaL,GACnCH,MAAOE,KACJI,EACHvE,SAAU,CAACA,EAAUiC,GAAUiC,IAA4BjE,EAAAA,EAAAA,KAAK,OAAQ,CACtEF,UAAW,kBACXC,SAAUkE,QAGd,IAEJL,EAASa,YAAc,WACvB,UACA,SAASC,EAAa/G,EAAMgH,GAA4B,IAAdC,EAAKC,UAAA9G,OAAA,QAAA+G,IAAAD,UAAA,GAAAA,UAAA,GAAGlH,EAChD,MAAM6C,EAAsBqD,EAAAA,YAAiB,CAAAkB,EAG1ChB,KAAG,IAHwC,SAC5ChE,KACGuE,GACJS,EAAA,OAAuBpF,EAAAA,EAAAA,MAAMiE,EAAU,IACnCU,EACHP,IAAKA,EACLhE,SAAU,EAAcC,EAAAA,EAAAA,KAAK,OAAQ,CACnC,cAAe,OACfD,SAAUA,GAAY4E,KACP3E,EAAAA,EAAAA,KAAK,OAAQ,CAC5BF,UAAW,kBACXC,SAAU6E,MAEZ,IAEF,OADApE,EAAOiE,YAAc9G,EACd6C,CACT,CACO,MAAMkB,EAAQgD,EAAa,QAAS,QAC9B9C,EAAO8C,EAAa,OAAQ,SAAK,YACjCM,EAAWN,EAAa,WAAY,SAAK,QACzCzC,EAAOyC,EAAa,OAAQ,UAC5BxC,EAAOwC,EAAa,OAAQ,QCtDnCjD,EAA0BoC,EAAAA,YAAiB,CAAAC,EAK9CC,KAAQ,IALuC,SAChDkB,EAAQ,UACRnF,EAAS,KACTwC,KACGgC,GACJR,EACC,MAAMoB,GAAoBC,EAAAA,EAAAA,IAAmBF,EAAU,cACvD,OAAoBjF,EAAAA,EAAAA,KAAK,KAAM,CAC7B+D,IAAKA,KACFO,EACHxE,UAAW0E,IAAW1E,EAAWoF,EAAmB5C,GAAQ,GAAG4C,KAAqB5C,MACpF,IAEJb,EAAWgD,YAAc,aACzB,QAAeW,OAAOC,OAAO5D,EAAY,CACvCC,MAAK,EACLE,KAAI,EACJoD,SAAQ,EACRjD,KAAM6B,EACN3B,KAAI,EACJC,KAAIA,G","sources":["modules/almacen/Producto.js","services/almacen/producto-service.js","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Container, Card, Button, Modal, Form, Row, Col, Table, Pagination } from 'react-bootstrap';\r\nimport { getProductos, addProducto, updateProducto, deleteProducto } from \"../../services/almacen/producto-service\";\r\n\r\n// Constantes para los selectores\r\nconst MARCAS = [\r\n  { cod: 'AA', desc: 'Aceros Arequipa' },\r\n  { cod: 'SP', desc: 'SiderPeru' },\r\n  { cod: 'M4', desc: 'Miromina' },\r\n  { cod: 'PR', desc: 'Prodac' },\r\n  { cod: 'ZZ', desc: 'Otra' }\r\n];\r\n\r\nconst PROVEEDORES = [\r\n  { cod: '1', desc: 'Aceros Arequipa' },\r\n  { cod: '2', desc: 'SiderPeru' },\r\n  { cod: '3', desc: 'Miromina' },\r\n  { cod: '4', desc: 'Prodac' },\r\n  { cod: '99', desc: 'Otra' }\r\n];\r\n\r\nconst UNIDADES = [\r\n  { cod: 'NIU', desc: 'Unidad (NIU)' },\r\n  { cod: 'BX', desc: 'Caja (BX)' },\r\n  { cod: 'UND', desc: 'Unidad (Und)' },\r\n  { cod: 'VAR', desc: 'Varilla (Var)' },\r\n  { cod: 'PAQ', desc: 'Paquete (Paqu)' },\r\n  { cod: 'RLL', desc: 'Rollo (Rll)' },\r\n  { cod: 'MLL', desc: 'Millar (Mll)' },\r\n  { cod: 'MT3', desc: 'Metro Cubico (Mt3)' },\r\n  { cod: 'TM', desc: 'Tonelada (Tm)' },\r\n  { cod: 'OTR', desc: 'Otra (Otr)' }\r\n];\r\n\r\nconst CATEGORIAS = [\r\n  { cod: '01', desc: 'Acero' },\r\n  { cod: '02', desc: 'Cemento' },\r\n  { cod: '03', desc: 'Alambres' },\r\n  { cod: '04', desc: 'Clavos' },\r\n  { cod: '05', desc: 'Piedras' },\r\n  { cod: '06', desc: 'Agregados' },\r\n  { cod: '99', desc: 'Otra' }\r\n];\r\n\r\nconst Producto = () => {\r\n  const [productos, setProductos] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [productsPerPage] = useState(20);\r\n  const [form, setForm] = useState({\r\n    cod_producto: \"\",\r\n    des_corta: \"\",\r\n    des_producto: \"\",\r\n    des_marca: \"\",\r\n    num_proveedor: \"\",\r\n    cod_unidad: \"\",\r\n    cod_categoria: \"\",\r\n  });\r\n\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const [selectedProducto, setSelectedProducto] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchProductos();\r\n  }, []);\r\n\r\n  const fetchProductos = async () => {\r\n    const data = await getProductos();\r\n    setProductos(data);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm({\r\n      ...form,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    if (!form.cod_producto || form.cod_producto.length < 1 || form.cod_producto.length > 5) {\r\n      alert('El código de producto debe tener entre 1 y 5 caracteres');\r\n      return false;\r\n    }\r\n    if (!form.des_corta || form.des_corta.length > 20) {\r\n      alert('La descripción corta es obligatoria y no debe exceder 20 caracteres');\r\n      return false;\r\n    }\r\n    if (!form.cod_unidad) {\r\n      alert('La unidad es obligatoria');\r\n      return false;\r\n    }\r\n    if (form.des_producto && form.des_producto.length > 100) {\r\n      alert('La descripción no debe exceder 100 caracteres');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmitAdd = async (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      await addProducto(form);\r\n      fetchProductos();\r\n      handleCloseAdd();\r\n    }\r\n  };\r\n\r\n  const handleShowAdd = () => setShowAdd(true);\r\n  const handleCloseAdd = () => {\r\n    setShowAdd(false);\r\n    setForm({\r\n      cod_producto: \"\",\r\n      des_corta: \"\",\r\n      des_producto: \"\",\r\n      des_marca: \"\",\r\n      num_proveedor: \"\",\r\n      cod_unidad: \"\",\r\n      cod_categoria: \"\",\r\n    });\r\n  };\r\n\r\n  const handleShowEdit = (producto) => {\r\n    setSelectedProducto(producto);\r\n    setForm({\r\n      cod_producto: producto.cod_producto,\r\n      des_corta: producto.des_corta,\r\n      des_producto: producto.des_producto,\r\n      des_marca: producto.des_marca,\r\n      num_proveedor: producto.num_proveedor,\r\n      cod_unidad: producto.cod_unidad,\r\n      cod_categoria: producto.cod_categoria,\r\n    });\r\n    setShowEdit(true);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setShowEdit(false);\r\n    setForm({\r\n      cod_producto: \"\",\r\n      des_corta: \"\",\r\n      des_producto: \"\",\r\n      des_marca: \"\",\r\n      num_proveedor: \"\",\r\n      cod_unidad: \"\",\r\n      cod_categoria: \"\",\r\n    });\r\n  };\r\n\r\n  const handleSubmitEdit = async (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      await updateProducto(selectedProducto.num_producto, form);\r\n      fetchProductos();\r\n      handleCloseEdit();\r\n    }\r\n  };\r\n\r\n  const handleShowDelete = (producto) => {\r\n    setSelectedProducto(producto);\r\n    setShowDelete(true);\r\n  };\r\n  const handleCloseDelete = () => setShowDelete(false);\r\n  const handleDelete = async () => {\r\n    await deleteProducto(selectedProducto.num_producto);\r\n    fetchProductos();\r\n    setShowDelete(false);\r\n  };\r\n\r\n  // Funciones helper para obtener descripciones\r\n  const getMarcaDesc = (cod) => {\r\n    const marca = MARCAS.find(m => m.cod === cod);\r\n    return marca ? marca.desc : cod;\r\n  };\r\n\r\n  const getProveedorDesc = (cod) => {\r\n    const proveedor = PROVEEDORES.find(p => p.cod === String(cod));\r\n    return proveedor ? proveedor.desc : cod;\r\n  };\r\n\r\n  const getCategoriaDesc = (cod) => {\r\n    const categoria = CATEGORIAS.find(c => c.cod === cod);\r\n    return categoria ? categoria.desc : cod;\r\n  };\r\n\r\n  const getUnidadDesc = (cod) => {\r\n    const unidad = UNIDADES.find(u => u.cod === cod);\r\n    return unidad ? unidad.desc : cod;\r\n  };\r\n\r\n  // Calcular productos para la página actual\r\n  const indexOfLastProduct = currentPage * productsPerPage;\r\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\r\n  const currentProducts = productos.slice(indexOfFirstProduct, indexOfLastProduct);\r\n\r\n  // Calcular el número total de páginas\r\n  const totalPages = Math.ceil(productos.length / productsPerPage);\r\n\r\n  // Función para cambiar de página\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"p-0\">\r\n      <Card>\r\n        <Card.Body className=\"p-3\">\r\n          <Card.Title className=\"mb-3\">Productos</Card.Title>\r\n          <Row className=\"mb-3\">\r\n            <Col xs={12} md={6} className=\"d-flex align-items-center justify-content-start mb-2 mb-md-0\">\r\n              <Button id=\"agregarProducto\" className=\"mr-2\" onClick={handleShowAdd} title=\"Agregar\">\r\n                <i className=\"fa fa-plus\"></i>\r\n              </Button>\r\n              <Form.Group className=\"flex-grow-1\">\r\n                <Form.Control type=\"text\" placeholder=\"Buscar\" id=\"txtBuscar\" className=\"rounded\" />\r\n              </Form.Group>\r\n              <Button type=\"button\" className=\"btn btn-secondary ml-2\" title=\"Filtrar\">\r\n                <i className=\"fa fa-search\"></i>\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"table-responsive\" id=\"tabProducto\">\r\n            <Table>\r\n              <caption>Tabla de Productos</caption>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Opciones</th>\r\n                  <th>Cod</th>\r\n                  <th>Desc Corta</th>\r\n                  <th>Descripción</th>\r\n                  <th>Marca</th>\r\n                  <th>Proveedor</th>\r\n                  <th>Unidad</th>\r\n                  <th>Categoría</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{currentProducts.map((producto, index) => (\r\n                <tr key={index}>\r\n                  <th>{indexOfFirstProduct + index + 1}</th>\r\n                  <td>\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                      <Button type=\"button\" className=\"btn btn-secondary btn-sm mb-1\" title=\"Editar\" onClick={() => handleShowEdit(producto)}> <i className=\"fa fa-pencil\"></i>\r\n                      </Button>\r\n                      <Button type=\"button\" className=\"btn btn-danger btn-sm mb-1 ml-1\" title=\"Eliminar\" onClick={() => handleShowDelete(producto)}> <i className=\"fa fa-trash-o\"></i>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                  <td>{producto.cod_producto}</td>\r\n                  <td>{producto.des_corta}</td>\r\n                  <td>{producto.des_producto}</td>\r\n                  <td>{getMarcaDesc(producto.des_marca)}</td>\r\n                  <td>{getProveedorDesc(producto.num_proveedor)}</td>\r\n                  <td>{getUnidadDesc(producto.cod_unidad)}</td>\r\n                  <td>{getCategoriaDesc(producto.cod_categoria)}</td>\r\n                </tr>\r\n              ))}\r\n              </tbody>\r\n            </Table>\r\n            {totalPages > 1 && (\r\n              <div className=\"d-flex justify-content-center mt-3\">\r\n                <Pagination>\r\n                  <Pagination.First \r\n                    onClick={() => handlePageChange(1)} \r\n                    disabled={currentPage === 1}\r\n                  />\r\n                  <Pagination.Prev \r\n                    onClick={() => handlePageChange(currentPage - 1)} \r\n                    disabled={currentPage === 1}\r\n                  />\r\n                  {[...Array(totalPages)].map((_, index) => (\r\n                    <Pagination.Item\r\n                      key={index + 1}\r\n                      active={index + 1 === currentPage}\r\n                      onClick={() => handlePageChange(index + 1)}\r\n                    >\r\n                      {index + 1}\r\n                    </Pagination.Item>\r\n                  ))}\r\n                  <Pagination.Next \r\n                    onClick={() => handlePageChange(currentPage + 1)} \r\n                    disabled={currentPage === totalPages}\r\n                  />\r\n                  <Pagination.Last \r\n                    onClick={() => handlePageChange(totalPages)} \r\n                    disabled={currentPage === totalPages}\r\n                  />\r\n                </Pagination>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      {/* Modal para agregar producto */}\r\n      <Modal show={showAdd} onHide={handleCloseAdd} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Registrar Producto</Modal.Title>\r\n        </Modal.Header>\r\n        <Form id=\"formRegistro\" autoComplete=\"off\" onSubmit={handleSubmitAdd}>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"cod_producto\">\r\n                  <Form.Label>Código de Producto</Form.Label>\r\n                  <Form.Control \r\n                    type=\"text\" \r\n                    name=\"cod_producto\" \r\n                    value={form.cod_producto} \r\n                    onChange={handleChange} \r\n                    required \r\n                    maxLength={5}\r\n                    minLength={1}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"des_corta\">\r\n                  <Form.Label>Descripción Corta</Form.Label>\r\n                  <Form.Control \r\n                    type=\"text\" \r\n                    name=\"des_corta\" \r\n                    value={form.des_corta} \r\n                    onChange={handleChange} \r\n                    required \r\n                    maxLength={20}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"des_producto\">\r\n                  <Form.Label>Descripción del Producto</Form.Label>\r\n                  <Form.Control \r\n                    type=\"text\" \r\n                    name=\"des_producto\" \r\n                    value={form.des_producto} \r\n                    onChange={handleChange} \r\n                    maxLength={100}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"des_marca\">\r\n                  <Form.Label>Marca</Form.Label>\r\n                  <Form.Select \r\n                    name=\"des_marca\" \r\n                    value={form.des_marca} \r\n                    onChange={handleChange} \r\n                  >\r\n                    <option value=\"\">Seleccione una marca</option>\r\n                    {MARCAS.map(marca => (\r\n                      <option key={marca.cod} value={marca.cod}>{marca.desc}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"num_proveedor\">\r\n                  <Form.Label>Proveedor</Form.Label>\r\n                  <Form.Select \r\n                    name=\"num_proveedor\" \r\n                    value={form.num_proveedor} \r\n                    onChange={handleChange} \r\n                  >\r\n                    <option value=\"\">Seleccione un proveedor</option>\r\n                    {PROVEEDORES.map(prov => (\r\n                      <option key={prov.cod} value={prov.cod}>{prov.desc}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"cod_unidad\">\r\n                  <Form.Label>Unidad</Form.Label>\r\n                  <Form.Select \r\n                    name=\"cod_unidad\" \r\n                    value={form.cod_unidad} \r\n                    onChange={handleChange} \r\n                    required\r\n                  >\r\n                    <option value=\"\">Seleccione una unidad</option>\r\n                    {UNIDADES.map(unidad => (\r\n                      <option key={unidad.cod} value={unidad.cod}>{unidad.desc}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"cod_categoria\">\r\n                  <Form.Label>Categoría</Form.Label>\r\n                  <Form.Select \r\n                    name=\"cod_categoria\" \r\n                    value={form.cod_categoria} \r\n                    onChange={handleChange} \r\n                  >\r\n                    <option value=\"\">Seleccione una categoría</option>\r\n                    {CATEGORIAS.map(cat => (\r\n                      <option key={cat.cod} value={cat.cod}>{cat.desc}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button type=\"submit\" variant=\"outline-primary\"> Registrar </Button>\r\n            <Button variant=\"outline-secondary\" onClick={handleCloseAdd}> Cancelar </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n      {/* Modal para editar producto (similar al Modal agregar producto) */}\r\n      <Modal show={showEdit} onHide={handleCloseEdit} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Editar Producto</Modal.Title>\r\n        </Modal.Header>\r\n        <Form id=\"formEditar\" autoComplete=\"off\" onSubmit={handleSubmitEdit}>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"cod_producto\">\r\n                  <Form.Label>Código de Producto</Form.Label>\r\n                  <Form.Control \r\n                    type=\"text\" \r\n                    name=\"cod_producto\" \r\n                    value={form.cod_producto} \r\n                    onChange={handleChange} \r\n                    required \r\n                    maxLength={5}\r\n                    minLength={1}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"des_corta\">\r\n                  <Form.Label>Descripción Corta</Form.Label>\r\n                  <Form.Control \r\n                    type=\"text\" \r\n                    name=\"des_corta\" \r\n                    value={form.des_corta} \r\n                    onChange={handleChange} \r\n                    required \r\n                    maxLength={20}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"des_producto\">\r\n                  <Form.Label>Descripción del Producto</Form.Label>\r\n                  <Form.Control \r\n                    type=\"text\" \r\n                    name=\"des_producto\" \r\n                    value={form.des_producto} \r\n                    onChange={handleChange} \r\n                    maxLength={100}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"des_marca\">\r\n                  <Form.Label>Marca</Form.Label>\r\n                  <Form.Select \r\n                    name=\"des_marca\" \r\n                    value={form.des_marca} \r\n                    onChange={handleChange} \r\n                  >\r\n                    <option value=\"\">Seleccione una marca</option>\r\n                    {MARCAS.map(marca => (\r\n                      <option key={marca.cod} value={marca.cod}>{marca.desc}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"num_proveedor\">\r\n                  <Form.Label>Proveedor</Form.Label>\r\n                  <Form.Select \r\n                    name=\"num_proveedor\" \r\n                    value={form.num_proveedor} \r\n                    onChange={handleChange} \r\n                  >\r\n                    <option value=\"\">Seleccione un proveedor</option>\r\n                    {PROVEEDORES.map(prov => (\r\n                      <option key={prov.cod} value={prov.cod}>{prov.desc}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"cod_unidad\">\r\n                  <Form.Label>Unidad</Form.Label>\r\n                  <Form.Select \r\n                    name=\"cod_unidad\" \r\n                    value={form.cod_unidad} \r\n                    onChange={handleChange} \r\n                    required\r\n                  >\r\n                    <option value=\"\">Seleccione una unidad</option>\r\n                    {UNIDADES.map(unidad => (\r\n                      <option key={unidad.cod} value={unidad.cod}>{unidad.desc}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={6} className=\"mb-3\">\r\n                <Form.Group controlId=\"cod_categoria\">\r\n                  <Form.Label>Categoría</Form.Label>\r\n                  <Form.Select \r\n                    name=\"cod_categoria\" \r\n                    value={form.cod_categoria} \r\n                    onChange={handleChange} \r\n                  >\r\n                    <option value=\"\">Seleccione una categoría</option>\r\n                    {CATEGORIAS.map(cat => (\r\n                      <option key={cat.cod} value={cat.cod}>{cat.desc}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button type=\"submit\" variant=\"outline-primary\"> Guardar </Button>\r\n            <Button variant=\"outline-secondary\" onClick={handleCloseEdit}> Cancelar </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n      {/* Modal para eliminar producto */}\r\n      <Modal show={showDelete} onHide={handleCloseDelete}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Eliminar Producto</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body> ¿Estás seguro de que deseas eliminar el producto:{\" \"} <strong>{selectedProducto && selectedProducto.des_producto}</strong>? </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"danger\" onClick={handleDelete}> Eliminar </Button>\r\n          <Button variant=\"secondary\" onClick={handleCloseDelete}> Cancelar </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Producto;\r\n\r\n","import request from '../apiService';\r\n\r\nconst getProductos = async () => request('/api/v1/almacen/productos');\r\nconst getProducto = async (id) => request(`/api/v1/almacen/productos/${id}`);\r\nconst addProducto = async (producto) => request('/api/v1/almacen/productos', 'POST', producto);\r\nconst updateProducto = async (id, updates) => request(`/api/v1/almacen/productos/${id}`, 'PUT', updates);\r\nconst deleteProducto = async (id) => request(`/api/v1/almacen/productos/${id}`, 'DELETE');\r\n\r\nexport { getProductos, getProducto, addProducto, updateProducto, deleteProducto };\r\n","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active = false,\n  disabled = false,\n  className,\n  style,\n  activeLabel = '(current)',\n  children,\n  linkStyle,\n  linkClassName,\n  as = Anchor,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : as;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: classNames('page-link', linkClassName),\n      style: linkStyle,\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.displayName = 'PageItem';\nexport default PageItem;\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, {\n    ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});"],"names":["MARCAS","cod","desc","PROVEEDORES","UNIDADES","CATEGORIAS","Producto","productos","setProductos","useState","currentPage","setCurrentPage","productsPerPage","form","setForm","cod_producto","des_corta","des_producto","des_marca","num_proveedor","cod_unidad","cod_categoria","showAdd","setShowAdd","showEdit","setShowEdit","showDelete","setShowDelete","selectedProducto","setSelectedProducto","useEffect","fetchProductos","async","data","request","getProductos","handleChange","e","name","value","target","validateForm","length","alert","handleCloseAdd","handleCloseEdit","handleCloseDelete","getMarcaDesc","marca","find","m","getProveedorDesc","proveedor","p","String","getCategoriaDesc","categoria","c","getUnidadDesc","unidad","u","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","totalPages","Math","ceil","handlePageChange","pageNumber","_jsxs","Container","fluid","className","children","_jsx","Card","Body","Title","Row","Col","xs","md","Button","id","onClick","handleShowAdd","title","Form","Group","Control","type","placeholder","Table","map","producto","index","role","handleShowEdit","handleShowDelete","Pagination","First","disabled","Prev","Array","_","Item","active","Next","Last","Modal","show","onHide","size","Header","closeButton","autoComplete","onSubmit","preventDefault","addProducto","controlId","Label","onChange","required","maxLength","minLength","Select","prov","cat","Footer","variant","updates","updateProducto","num_producto","deleteProducto","PageItem","React","_ref","ref","style","activeLabel","linkStyle","linkClassName","as","Anchor","props","Component","classNames","displayName","createButton","defaultValue","label","arguments","undefined","_ref2","Ellipsis","bsPrefix","decoratedBsPrefix","useBootstrapPrefix","Object","assign"],"sourceRoot":""}